Experiment 4 (Windows Version): Jenkins + SonarQube CI/CD Pipeline
✅ 1. Install Java JDK (Required for both SonarQube & Jenkins)
Download JDK 11 or 21

https://adoptium.net or https://jdk.java.net

Verify Installation (CMD):

c
Copy
Edit
java -version
✅ 2. Install and Run SonarQube (Windows)
a. Download SonarQube
Go to: https://www.sonarsource.com/products/sonarqube/downloads/

Download the Windows-compatible ZIP (e.g., sonarqube-10.2.1.78527.zip)

Extract it to:

makefile
Copy
Edit
C:\SonarQube\sonarqube-10.2.1.78527
b. Run SonarQube
Open Command Prompt (Run as Administrator) and execute:

cmd
Copy
Edit
cd C:\SonarQube\sonarqube-10.2.1.78527\bin\windows-x86-64
StartSonar.bat
✅ Open SonarQube in your browser:
http://localhost:9000
Login:

Username: admin

Password: admin

👉 Change password after first login.

✅ 3. Install Jenkins (Windows)
a. Download Jenkins
Go to: https://www.jenkins.io/download/

Choose Windows, download the .msi installer

Run it and follow the setup instructions.

b. Start Jenkins
Jenkins installs as a Windows Service, but if needed you can run:

cmd
Copy
Edit
net start jenkins
Open Jenkins in browser:
http://localhost:8080

c. Unlock Jenkins
Open CMD and run:

cmd
Copy
Edit
type C:\Program Files\Jenkins\secrets\initialAdminPassword
Paste the password on Jenkins setup screen.

Install Suggested Plugins.

✅ 4. Integrate SonarQube with Jenkins
a. Install SonarQube Scanner Plugin in Jenkins
Jenkins Dashboard → Manage Jenkins → Manage Plugins

Go to Available tab

Search: SonarQube Scanner

Install it, then restart Jenkins

b. Configure SonarQube Server in Jenkins
Jenkins Dashboard → Manage Jenkins → Configure System

Scroll to SonarQube Servers

Add:

Name: My SonarQube Server

Server URL: http://localhost:9000

Token: Generate in SonarQube
(My Account → Security → Generate Token)

✅ Save

✅ 5. Create a CI/CD Pipeline in Jenkins
🟩 Option 1: Freestyle Project
Jenkins → New Item → Freestyle Project

Under Source Code Management:

Select Git → Add your GitHub URL

Under Build → Execute SonarQube Scanner

Add a sonar-project.properties in your project root:

ini
Copy
Edit
sonar.projectKey=myproject
sonar.sources=src
sonar.host.url=http://localhost:9000
sonar.login=<Generated_Token>
🟦 Option 2: Pipeline Project (Recommended)
Jenkins → New Item → Pipeline

Under Pipeline Script, paste this:

groovy
Copy
Edit
pipeline {
    agent any
    tools {
        maven 'Maven3' // Ensure Maven is configured in Jenkins tools
    }
    stages {
        stage('Build') {
            steps {
                bat 'mvn clean install'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('My SonarQube Server') {
                    bat 'mvn sonar:sonar'
                }
            }
        }
    }
}
⚠️ Replace sh with bat in Windows.

✅ 6. Run Your Pipeline
Trigger it manually (or set up webhook)

Check analysis results at:
http://localhost:9000/dashboard

✅ Outcome
Benefit	Description
✅ Static Analysis	Automatically checks for bugs, vulnerabilities, code smells
✅ Continuous Integration	Jenkins automates code build and analysis
✅ Secure Code	SonarQube reports help reduce technical debt early

Let me know if you want:

Help generating a Sonar token

Help installing Maven or setting Jenkins tools path

A working sample project for this CI/CD pipeline on Windows
